participant "Identity Propagation Service (IPS)" as IPS
participant "Client" as Client
participant "Relying Party (RP)" as RP

bottomparticipants

note over IPS:IPS:\n• must support RFC 8705\n• acts as a Relying Party in respect of the IdP in order to obtain\n  an access_token_with_user_claims\n• is registered at the IdP as a confidential client\n• is part of the STS that supports the Token Exchange extension of OAuth 2.0\n• publishes its metadata on a URL /.well-known/oauth-authorization-server\n
note over Client:Client:\n• must support RFC 8705\n• acts as a Relying Party in respect of the IPS in order to obtain\n  an access_token_with_user_claims\n• is registered at the IPS as a confidential client\n
note over RP:RP:\n• must support RFC 8705\n• uses the information in the assertion to identify the subscriber\n  and makes authorization decisions using a local ABAC engine.
IPS<-Client:1. Send an HTTP request to exchange the access_token_with_user_claims\n    for an access token with changed aud claim\n    • grant_type = token-exchange\n    • resource = a target RP URI\n    • requested_token_type = urn:ietf:params:oauth:token-type:access_token\n    • subject_token = access_token_with_user_claims\n    • subject_token_type = urn:ietf:params:oauth:token-type:access_token
IPS->IPS:2. Authorization decision:\n   1. evaluate the resource parameter\n   2. verify the subject_token signature\n   3. evaluate the subject_token claims

IPS->IPS:3. IPS generates an access_token with these claims:\n    {iss, aud, sub, exp, nbf}\n    • iss is the URI that identifies who issues the access_token\n    • aud identifies the target service and it is the aud value from\n      the resource parameter\n    • sub identifies the principal by an email address that is extracted from\n      the access_token_with_user_claims\n    • exp, nbf are the standard JWT claims
Client<-IPS:4. Return the access_token

Client->RP:5. Send an HTTP request to the RP with the access_token in the header
RP->RP:6. Authorization decision\n    1. verify the access_token signature\n    2. evaluate claims
RP->Client:7. Return the HTTP response, typically with 200, 201 status code
