participant "Client" as Client
participant "RS" as RS

bottomparticipants

entryspacing 1.0
note over Client:Client:\n• supports mTLS authentication with X.509 certificates\n• uses self-signed or CA-signed certificate,\n  the CN attribute of the public Client certificate is used as a global client identifier\n  in respect of the service it represents, e.g., CN=_smtp-client.foo.127.0.0.1.nip.io\n• acts as a client in respect of the RS\n• the Client's public key hash is published on the client domain using DNS TXT record,\n  e.g., _smtp-client.foo.127.0.0.1.nip.io. IN TXT  "v=grip1; h=sha256; p=d2abde240d7cd3ee6b ... e971"
note over RS:RS:\n• supports mTLS authentication with X.509 certificates\n• uses the information in the assertion to identify the user\n  and makes authorization decisions using a local ABAC engine
Client->Client:1. Client generates a token — a signed, using the Client's private key,\n    certificate-bound assertion in JWT format with these claims:\n    {iss, aud, sub, exp, nbf, jwk, act{sub}, tokens}\n    • iss identifies who issues the token — CN from public Client's certificate,\n      e.g. _smtp-client.foo.127.0.0.1.nip.io\n    • aud identifies the target RS URI\n    • sub identifies the user by email address,\n      e.g. User Principal Name (UPN) from Active Directory (AD)\n      (Client impersonates the user by using their email address)\n    • exp, nbf are the standard JWT claims\n    • jwks holds a Client's certificate public key in the JWK Set format\n      (alternatively provide JWK Set by URI using jwks_uri claim)\n    • tokens (optional) holds an embedded JWT from the previous hop


Client->RS:2. Send an HTTP request to the RS with the token using mTLS
RS->RS:3. Authorization decision\n    1. the client is authenticated via the DNS\n       using the TXT record and CN from the public Client's certificate\n    2. verify the token signature\n    3. validate proof-of-possession\n    4. verify the aud claim\n    5. (optional) evaluate embedded tokens\n    6. the domain part of the users's email address\n       and the CN's domain part from the public Client's certificate must match
RS->Client:4. Return the HTTP response, typically with 200, 201 status code
